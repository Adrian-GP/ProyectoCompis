
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL CHAR CHARACTER COLON COMMA DIVIDE ELSE EQUALS FOR FUNCTION ID IF INT INTEGER LBRA LOGICAL LPAREN LSBRA MAIN MINUS NOT NUM NUMERIC OR PLUS PROGRAM RBRA READ RELOP RETURN RPAREN RSBRA SEMICOLON TIMES VAR VOID WRITEprograma : PROGRAM ID SEMICOLON programa2 programa3 mainprograma2 : vars programa2\n                | emptyprograma3 : func programa3\n                | emptymain :  MAIN LBRA mainvars main2 RBRAmain2 : estatuto main2\n                | emptymainvars : vars mainvars\n                | emptyvars : type idmv vars2 SEMICOLONvars2 : empty\n             | COMMA idmv vars2bloque : LBRA bloque2 RBRAbloque2 : empty\n               | estatuto bloque2type : BOOL\n            | CHAR\n            | INT\n            | NUMexlog : exlog2 expresion exlog3exlog2 : NOT\n              | emptyexlog3 : AND exlog\n              | OR exlog\n              | emptyexpresion : exp expresion2expresion2 : empty\n                  | RELOP expestatuto : estatuto2 SEMICOLONestatuto2 : condicion\n                | ciclo\n                | funccall\n                | asignacion\n                | read\n                | escritura\n                | returnasignacion : idmv EQUALS exlogdata : NUMERIC\n            | CHARACTER\n            | LOGICAL\n            | INTEGER\n            | idmv\n            | funccall\n            | readreturn : RETURN return2return2 : exlog\n               | empty idmvf : ID idmvf2idmvf2 : LSBRA exp RSBRA idmvf3\n              | LPAREN exp RPAREN\n              | emptyidmvf3 : LSBRA exp RSBRA\n              | emptyidmv : ID idmv2idmv2 : LSBRA exp RSBRA idmvf3\n              | emptyargs : type ID args2args2 : COMMA args\n              | emptyfunccall : ID LPAREN funccall2 RPARENfunccall2 : exp funccall3\n              | emptyfunccall3 : COMMA exp funccall3\n              | emptycondicion : IF LPAREN exlog RPAREN bloque condicion2condicion2 : ELSE bloque\n              | emptyexp : term exp2exp2 : empty\n            | PLUS exp\n            | MINUS expterm : factor term2term2 : empty\n             | TIMES term\n             | DIVIDE termfactor : LPAREN exlog RPAREN\n              | PLUS data\n              | MINUS data\n              | dataescritura : WRITE LPAREN interior RPARENinterior : expresion escritura2\n                | CHARACTER escritura2escritura2 : COMMA interior\n                  | emptyread : READ LPAREN read2 RPARENread2 : CHARACTER\n                | emptyfunc : FUNCTION functipo ID LPAREN funcargs RPAREN LBRA funcvars funcest RBRAfunctipo : type\n                | VOIDfuncargs : args\n                | emptyfuncest : estatuto funcest\n                | emptyfuncvars : vars funcvars\n                | emptyciclo : FOR LPAREN ciclo1 SEMICOLON exlog SEMICOLON asignacion RPAREN bloqueciclo1 : asignacion\n                | emptyempty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,20,112,],[0,-1,-6,]),'ID':([2,8,9,10,11,12,23,24,25,28,30,32,34,39,40,42,52,53,54,60,61,64,65,67,68,69,72,75,90,91,95,96,114,115,116,117,118,121,126,127,131,134,145,155,158,161,162,163,167,171,173,179,180,],[3,19,-17,-18,-19,-20,33,-90,-91,19,50,-101,-11,-101,50,50,87,-101,-10,50,50,50,50,50,-22,-23,50,87,-101,-9,123,50,-30,-101,19,-101,50,-23,-101,-101,50,50,-101,-101,50,87,-101,-97,87,87,-96,87,19,]),'SEMICOLON':([3,18,19,26,27,29,31,35,37,38,41,43,44,45,46,47,48,49,50,56,57,58,59,62,63,70,71,77,78,79,80,81,82,83,84,90,97,98,99,100,101,102,103,104,105,116,119,120,121,125,128,129,130,132,136,138,139,140,141,149,150,151,152,156,166,168,174,176,183,184,188,],[4,-101,-101,34,-12,-55,-57,-101,-101,-101,-80,-39,-40,-41,-42,-43,-44,-45,-101,-13,-101,-69,-70,-73,-74,-78,-79,114,-31,-32,-33,-34,-35,-36,-37,-101,-56,-54,-71,-72,-75,-76,-77,-101,-101,-101,-46,-47,-48,-21,-26,-27,-28,-61,-86,155,-99,-100,-38,-53,-24,-25,-29,-81,-101,180,-66,-68,-67,-14,-98,]),'FUNCTION':([4,5,6,7,14,17,34,181,],[-101,16,-101,-3,16,-2,-11,-89,]),'MAIN':([4,5,6,7,13,14,15,17,22,34,181,],[-101,-101,-101,-3,21,-101,-5,-2,-4,-11,-89,]),'BOOL':([4,6,16,32,34,53,55,145,147,162,],[9,9,9,9,-11,9,9,9,9,9,]),'CHAR':([4,6,16,32,34,53,55,145,147,162,],[10,10,10,10,-11,10,10,10,10,10,]),'INT':([4,6,16,32,34,53,55,145,147,162,],[11,11,11,11,-11,11,11,11,11,11,]),'NUM':([4,6,16,32,34,53,55,145,147,162,],[12,12,12,12,-11,12,12,12,12,12,]),'VOID':([16,],[25,]),'COMMA':([18,19,29,31,35,37,38,41,43,44,45,46,47,48,49,50,57,58,59,62,63,70,71,97,98,99,100,101,102,103,105,107,123,129,130,132,136,143,144,149,152,153,],[28,-101,-55,-57,28,-101,-101,-80,-39,-40,-41,-42,-43,-44,-45,-101,-101,-69,-70,-73,-74,-78,-79,-56,-54,-71,-72,-75,-76,-77,-101,134,147,-27,-28,-61,-86,158,158,-53,-29,134,]),'LSBRA':([19,50,57,87,],[30,30,96,30,]),'EQUALS':([19,29,31,57,87,88,97,98,149,],[-101,-55,-57,-101,-101,117,-56,-54,-53,]),'LBRA':([21,122,154,175,187,],[32,145,167,167,167,]),'TIMES':([29,31,38,41,43,44,45,46,47,48,49,50,57,70,71,97,98,103,132,136,144,149,],[-55,-57,64,-80,-39,-40,-41,-42,-43,-44,-45,-101,-101,-78,-79,-56,-54,-77,-61,-86,-40,-53,]),'DIVIDE':([29,31,38,41,43,44,45,46,47,48,49,50,57,70,71,97,98,103,132,136,144,149,],[-55,-57,65,-80,-39,-40,-41,-42,-43,-44,-45,-101,-101,-78,-79,-56,-54,-77,-61,-86,-40,-53,]),'PLUS':([29,30,31,37,38,39,41,43,44,45,46,47,48,49,50,57,60,61,62,63,64,65,67,68,69,70,71,72,90,96,97,98,101,102,103,115,117,118,121,126,127,131,132,134,136,144,149,155,158,],[-55,40,-57,60,-101,-101,-80,-39,-40,-41,-42,-43,-44,-45,-101,-101,40,40,-73,-74,40,40,40,-22,-23,-78,-79,40,-101,40,-56,-54,-75,-76,-77,-101,-101,40,-23,-101,-101,40,-61,40,-86,-40,-53,-101,40,]),'MINUS':([29,30,31,37,38,39,41,43,44,45,46,47,48,49,50,57,60,61,62,63,64,65,67,68,69,70,71,72,90,96,97,98,101,102,103,115,117,118,121,126,127,131,132,134,136,144,149,155,158,],[-55,42,-57,61,-101,-101,-80,-39,-40,-41,-42,-43,-44,-45,-101,-101,42,42,-73,-74,42,42,42,-22,-23,-78,-79,42,-101,42,-56,-54,-75,-76,-77,-101,-101,42,-23,-101,-101,42,-61,42,-86,-40,-53,-101,42,]),'RSBRA':([29,31,36,37,38,41,43,44,45,46,47,48,49,50,57,58,59,62,63,70,71,97,98,99,100,101,102,103,124,132,136,149,],[-55,-57,57,-101,-101,-80,-39,-40,-41,-42,-43,-44,-45,-101,-101,-69,-70,-73,-74,-78,-79,-56,-54,-71,-72,-75,-76,-77,149,-61,-86,-53,]),'RELOP':([29,31,37,38,41,43,44,45,46,47,48,49,50,57,58,59,62,63,70,71,97,98,99,100,101,102,103,105,132,136,144,149,],[-55,-57,-101,-101,-80,-39,-40,-41,-42,-43,-44,-45,-101,-101,-69,-70,-73,-74,-78,-79,-56,-54,-71,-72,-75,-76,-77,131,-61,-86,-40,-53,]),'AND':([29,31,37,38,41,43,44,45,46,47,48,49,50,57,58,59,62,63,70,71,97,98,99,100,101,102,103,104,105,129,130,132,136,149,152,],[-55,-57,-101,-101,-80,-39,-40,-41,-42,-43,-44,-45,-101,-101,-69,-70,-73,-74,-78,-79,-56,-54,-71,-72,-75,-76,-77,126,-101,-27,-28,-61,-86,-53,-29,]),'OR':([29,31,37,38,41,43,44,45,46,47,48,49,50,57,58,59,62,63,70,71,97,98,99,100,101,102,103,104,105,129,130,132,136,149,152,],[-55,-57,-101,-101,-80,-39,-40,-41,-42,-43,-44,-45,-101,-101,-69,-70,-73,-74,-78,-79,-56,-54,-71,-72,-75,-76,-77,127,-101,-27,-28,-61,-86,-53,-29,]),'RPAREN':([29,31,37,38,41,43,44,45,46,47,48,49,50,55,57,58,59,62,63,66,70,71,72,73,92,93,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,123,125,128,129,130,132,133,135,136,137,141,142,143,144,146,148,149,150,151,152,153,157,159,160,164,165,169,186,],[-55,-57,-101,-101,-80,-39,-40,-41,-42,-43,-44,-45,-101,-101,-101,-69,-70,-73,-74,103,-78,-79,-101,-101,122,-92,-93,-56,-54,-71,-72,-75,-76,-77,-101,-101,132,-101,-63,136,-87,-88,-101,-21,-26,-27,-28,-61,-62,-65,-86,154,-38,156,-101,-40,-58,-60,-53,-24,-25,-29,-101,-82,-85,-83,-59,-64,-84,187,]),'LPAREN':([30,33,39,50,51,60,61,64,65,67,68,69,72,85,86,87,89,90,96,115,117,118,121,126,127,131,134,155,158,],[39,55,-101,72,73,39,39,39,39,39,-22,-23,39,115,116,72,118,-101,39,-101,-101,39,-23,-101,-101,39,39,-101,39,]),'NUMERIC':([30,39,40,42,60,61,64,65,67,68,69,72,90,96,115,117,118,121,126,127,131,134,155,158,],[43,-101,43,43,43,43,43,43,43,-22,-23,43,-101,43,-101,-101,43,-23,-101,-101,43,43,-101,43,]),'CHARACTER':([30,39,40,42,60,61,64,65,67,68,69,72,73,90,96,115,117,118,121,126,127,131,134,155,158,],[44,-101,44,44,44,44,44,44,44,-22,-23,44,110,-101,44,-101,-101,144,-23,-101,-101,44,44,-101,144,]),'LOGICAL':([30,39,40,42,60,61,64,65,67,68,69,72,90,96,115,117,118,121,126,127,131,134,155,158,],[45,-101,45,45,45,45,45,45,45,-22,-23,45,-101,45,-101,-101,45,-23,-101,-101,45,45,-101,45,]),'INTEGER':([30,39,40,42,60,61,64,65,67,68,69,72,90,96,115,117,118,121,126,127,131,134,155,158,],[46,-101,46,46,46,46,46,46,46,-22,-23,46,-101,46,-101,-101,46,-23,-101,-101,46,46,-101,46,]),'READ':([30,32,34,39,40,42,52,53,54,60,61,64,65,67,68,69,72,75,90,91,96,114,115,117,118,121,126,127,131,134,145,155,158,161,162,163,167,171,173,179,],[51,-101,-11,-101,51,51,51,-101,-10,51,51,51,51,51,-22,-23,51,51,-101,-9,51,-30,-101,-101,51,-23,-101,-101,51,51,-101,-101,51,51,-101,-97,51,51,-96,51,]),'IF':([32,34,52,53,54,75,91,114,145,161,162,163,167,171,173,179,],[-101,-11,85,-101,-10,85,-9,-30,-101,85,-101,-97,85,85,-96,85,]),'FOR':([32,34,52,53,54,75,91,114,145,161,162,163,167,171,173,179,],[-101,-11,86,-101,-10,86,-9,-30,-101,86,-101,-97,86,86,-96,86,]),'WRITE':([32,34,52,53,54,75,91,114,145,161,162,163,167,171,173,179,],[-101,-11,89,-101,-10,89,-9,-30,-101,89,-101,-97,89,89,-96,89,]),'RETURN':([32,34,52,53,54,75,91,114,145,161,162,163,167,171,173,179,],[-101,-11,90,-101,-10,90,-9,-30,-101,90,-101,-97,90,90,-96,90,]),'RBRA':([32,34,52,53,54,74,75,76,91,113,114,145,161,162,163,167,170,171,172,173,177,178,179,182,185,],[-101,-11,-101,-101,-10,112,-101,-8,-9,-7,-30,-101,-101,-101,-97,-101,181,-101,-95,-96,184,-15,-101,-94,-16,]),'NOT':([39,90,115,117,126,127,155,],[68,68,68,68,68,68,68,]),'ELSE':([166,184,],[175,-14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'programa2':([4,6,],[5,17,]),'vars':([4,6,32,53,145,162,],[6,6,53,53,162,162,]),'empty':([4,5,6,14,18,19,32,35,37,38,39,50,52,53,55,57,72,73,75,87,90,104,105,107,115,116,117,123,126,127,143,144,145,153,155,161,162,166,167,171,179,],[7,15,7,15,27,31,54,27,59,63,69,31,76,54,94,98,108,111,76,31,121,128,130,135,69,140,69,148,69,69,159,159,163,135,69,172,163,176,178,172,178,]),'type':([4,6,16,32,53,55,145,147,162,],[8,8,24,8,8,95,8,95,8,]),'programa3':([5,14,],[13,22,]),'func':([5,14,],[14,14,]),'idmv':([8,28,30,40,42,52,60,61,64,65,67,72,75,96,116,118,131,134,158,161,167,171,179,180,],[18,35,47,47,47,88,47,47,47,47,47,47,88,47,88,47,47,47,47,88,88,88,88,88,]),'main':([13,],[20,]),'functipo':([16,],[23,]),'vars2':([18,35,],[26,56,]),'idmv2':([19,50,87,],[29,29,29,]),'exp':([30,60,61,67,72,96,118,131,134,158,],[36,99,100,105,107,124,105,152,153,105,]),'term':([30,60,61,64,65,67,72,96,118,131,134,158,],[37,37,37,101,102,37,37,37,37,37,37,37,]),'factor':([30,60,61,64,65,67,72,96,118,131,134,158,],[38,38,38,38,38,38,38,38,38,38,38,38,]),'data':([30,40,42,60,61,64,65,67,72,96,118,131,134,158,],[41,70,71,41,41,41,41,41,41,41,41,41,41,41,]),'funccall':([30,40,42,52,60,61,64,65,67,72,75,96,118,131,134,158,161,167,171,179,],[48,48,48,80,48,48,48,48,48,48,80,48,48,48,48,48,80,80,80,80,]),'read':([30,40,42,52,60,61,64,65,67,72,75,96,118,131,134,158,161,167,171,179,],[49,49,49,82,49,49,49,49,49,49,82,49,49,49,49,49,82,82,82,82,]),'mainvars':([32,53,],[52,91,]),'exp2':([37,],[58,]),'term2':([38,],[62,]),'exlog':([39,90,115,117,126,127,155,],[66,120,137,141,150,151,168,]),'exlog2':([39,90,115,117,126,127,155,],[67,67,67,67,67,67,67,]),'main2':([52,75,],[74,113,]),'estatuto':([52,75,161,167,171,179,],[75,75,171,179,171,179,]),'estatuto2':([52,75,161,167,171,179,],[77,77,77,77,77,77,]),'condicion':([52,75,161,167,171,179,],[78,78,78,78,78,78,]),'ciclo':([52,75,161,167,171,179,],[79,79,79,79,79,79,]),'asignacion':([52,75,116,161,167,171,179,180,],[81,81,139,81,81,81,81,186,]),'escritura':([52,75,161,167,171,179,],[83,83,83,83,83,83,]),'return':([52,75,161,167,171,179,],[84,84,84,84,84,84,]),'funcargs':([55,],[92,]),'args':([55,147,],[93,164,]),'idmvf3':([57,],[97,]),'expresion':([67,118,158,],[104,143,143,]),'funccall2':([72,],[106,]),'read2':([73,],[109,]),'return2':([90,],[119,]),'exlog3':([104,],[125,]),'expresion2':([105,],[129,]),'funccall3':([107,153,],[133,165,]),'ciclo1':([116,],[138,]),'interior':([118,158,],[142,169,]),'args2':([123,],[146,]),'escritura2':([143,144,],[157,160,]),'funcvars':([145,162,],[161,173,]),'bloque':([154,175,187,],[166,183,188,]),'funcest':([161,171,],[170,182,]),'condicion2':([166,],[174,]),'bloque2':([167,179,],[177,185,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID SEMICOLON programa2 programa3 main','programa',6,'p_programa_start','eva_lex.py',118),
  ('programa2 -> vars programa2','programa2',2,'p_program2','eva_lex.py',121),
  ('programa2 -> empty','programa2',1,'p_program2','eva_lex.py',122),
  ('programa3 -> func programa3','programa3',2,'p_programa3','eva_lex.py',125),
  ('programa3 -> empty','programa3',1,'p_programa3','eva_lex.py',126),
  ('main -> MAIN LBRA mainvars main2 RBRA','main',5,'p_main','eva_lex.py',137),
  ('main2 -> estatuto main2','main2',2,'p_main2','eva_lex.py',140),
  ('main2 -> empty','main2',1,'p_main2','eva_lex.py',141),
  ('mainvars -> vars mainvars','mainvars',2,'p_mainvars','eva_lex.py',144),
  ('mainvars -> empty','mainvars',1,'p_mainvars','eva_lex.py',145),
  ('vars -> type idmv vars2 SEMICOLON','vars',4,'p_vars','eva_lex.py',165),
  ('vars2 -> empty','vars2',1,'p_vars2','eva_lex.py',168),
  ('vars2 -> COMMA idmv vars2','vars2',3,'p_vars2','eva_lex.py',169),
  ('bloque -> LBRA bloque2 RBRA','bloque',3,'p_bloque','eva_lex.py',174),
  ('bloque2 -> empty','bloque2',1,'p_bloque2','eva_lex.py',177),
  ('bloque2 -> estatuto bloque2','bloque2',2,'p_bloque2','eva_lex.py',178),
  ('type -> BOOL','type',1,'p_type','eva_lex.py',182),
  ('type -> CHAR','type',1,'p_type','eva_lex.py',183),
  ('type -> INT','type',1,'p_type','eva_lex.py',184),
  ('type -> NUM','type',1,'p_type','eva_lex.py',185),
  ('exlog -> exlog2 expresion exlog3','exlog',3,'p_exlog','eva_lex.py',190),
  ('exlog2 -> NOT','exlog2',1,'p_exlog2','eva_lex.py',193),
  ('exlog2 -> empty','exlog2',1,'p_exlog2','eva_lex.py',194),
  ('exlog3 -> AND exlog','exlog3',2,'p_exlog3','eva_lex.py',197),
  ('exlog3 -> OR exlog','exlog3',2,'p_exlog3','eva_lex.py',198),
  ('exlog3 -> empty','exlog3',1,'p_exlog3','eva_lex.py',199),
  ('expresion -> exp expresion2','expresion',2,'p_expresion','eva_lex.py',204),
  ('expresion2 -> empty','expresion2',1,'p_expresion2','eva_lex.py',206),
  ('expresion2 -> RELOP exp','expresion2',2,'p_expresion2','eva_lex.py',207),
  ('estatuto -> estatuto2 SEMICOLON','estatuto',2,'p_estatuto','eva_lex.py',211),
  ('estatuto2 -> condicion','estatuto2',1,'p_estatuto2','eva_lex.py',214),
  ('estatuto2 -> ciclo','estatuto2',1,'p_estatuto2','eva_lex.py',215),
  ('estatuto2 -> funccall','estatuto2',1,'p_estatuto2','eva_lex.py',216),
  ('estatuto2 -> asignacion','estatuto2',1,'p_estatuto2','eva_lex.py',217),
  ('estatuto2 -> read','estatuto2',1,'p_estatuto2','eva_lex.py',218),
  ('estatuto2 -> escritura','estatuto2',1,'p_estatuto2','eva_lex.py',219),
  ('estatuto2 -> return','estatuto2',1,'p_estatuto2','eva_lex.py',220),
  ('asignacion -> idmv EQUALS exlog','asignacion',3,'p_asignacion','eva_lex.py',224),
  ('data -> NUMERIC','data',1,'p_data','eva_lex.py',228),
  ('data -> CHARACTER','data',1,'p_data','eva_lex.py',229),
  ('data -> LOGICAL','data',1,'p_data','eva_lex.py',230),
  ('data -> INTEGER','data',1,'p_data','eva_lex.py',231),
  ('data -> idmv','data',1,'p_data','eva_lex.py',232),
  ('data -> funccall','data',1,'p_data','eva_lex.py',233),
  ('data -> read','data',1,'p_data','eva_lex.py',234),
  ('return -> RETURN return2','return',2,'p_return','eva_lex.py',238),
  ('return2 -> exlog','return2',1,'p_return2','eva_lex.py',241),
  ('return2 -> empty','return2',1,'p_return2','eva_lex.py',242),
  ('idmvf -> ID idmvf2','idmvf',2,'p_idmvf','eva_lex.py',246),
  ('idmvf2 -> LSBRA exp RSBRA idmvf3','idmvf2',4,'p_idmvf2','eva_lex.py',250),
  ('idmvf2 -> LPAREN exp RPAREN','idmvf2',3,'p_idmvf2','eva_lex.py',251),
  ('idmvf2 -> empty','idmvf2',1,'p_idmvf2','eva_lex.py',252),
  ('idmvf3 -> LSBRA exp RSBRA','idmvf3',3,'p_idmvf3','eva_lex.py',255),
  ('idmvf3 -> empty','idmvf3',1,'p_idmvf3','eva_lex.py',256),
  ('idmv -> ID idmv2','idmv',2,'p_idmv','eva_lex.py',260),
  ('idmv2 -> LSBRA exp RSBRA idmvf3','idmv2',4,'p_idmv2','eva_lex.py',264),
  ('idmv2 -> empty','idmv2',1,'p_idmv2','eva_lex.py',265),
  ('args -> type ID args2','args',3,'p_args','eva_lex.py',269),
  ('args2 -> COMMA args','args2',2,'p_args2','eva_lex.py',272),
  ('args2 -> empty','args2',1,'p_args2','eva_lex.py',273),
  ('funccall -> ID LPAREN funccall2 RPAREN','funccall',4,'p_funccall','eva_lex.py',277),
  ('funccall2 -> exp funccall3','funccall2',2,'p_funccall2','eva_lex.py',280),
  ('funccall2 -> empty','funccall2',1,'p_funccall2','eva_lex.py',281),
  ('funccall3 -> COMMA exp funccall3','funccall3',3,'p_funccall3','eva_lex.py',284),
  ('funccall3 -> empty','funccall3',1,'p_funccall3','eva_lex.py',285),
  ('condicion -> IF LPAREN exlog RPAREN bloque condicion2','condicion',6,'p_condicion','eva_lex.py',292),
  ('condicion2 -> ELSE bloque','condicion2',2,'p_condicion2','eva_lex.py',295),
  ('condicion2 -> empty','condicion2',1,'p_condicion2','eva_lex.py',296),
  ('exp -> term exp2','exp',2,'p_exp','eva_lex.py',300),
  ('exp2 -> empty','exp2',1,'p_exp2','eva_lex.py',303),
  ('exp2 -> PLUS exp','exp2',2,'p_exp2','eva_lex.py',304),
  ('exp2 -> MINUS exp','exp2',2,'p_exp2','eva_lex.py',305),
  ('term -> factor term2','term',2,'p_term','eva_lex.py',309),
  ('term2 -> empty','term2',1,'p_term2','eva_lex.py',312),
  ('term2 -> TIMES term','term2',2,'p_term2','eva_lex.py',313),
  ('term2 -> DIVIDE term','term2',2,'p_term2','eva_lex.py',314),
  ('factor -> LPAREN exlog RPAREN','factor',3,'p_factor','eva_lex.py',317),
  ('factor -> PLUS data','factor',2,'p_factor','eva_lex.py',318),
  ('factor -> MINUS data','factor',2,'p_factor','eva_lex.py',319),
  ('factor -> data','factor',1,'p_factor','eva_lex.py',320),
  ('escritura -> WRITE LPAREN interior RPAREN','escritura',4,'p_escritura','eva_lex.py',331),
  ('interior -> expresion escritura2','interior',2,'p_interior','eva_lex.py',334),
  ('interior -> CHARACTER escritura2','interior',2,'p_interior','eva_lex.py',335),
  ('escritura2 -> COMMA interior','escritura2',2,'p_escritura2','eva_lex.py',338),
  ('escritura2 -> empty','escritura2',1,'p_escritura2','eva_lex.py',339),
  ('read -> READ LPAREN read2 RPAREN','read',4,'p_read','eva_lex.py',342),
  ('read2 -> CHARACTER','read2',1,'p_read2','eva_lex.py',345),
  ('read2 -> empty','read2',1,'p_read2','eva_lex.py',346),
  ('func -> FUNCTION functipo ID LPAREN funcargs RPAREN LBRA funcvars funcest RBRA','func',10,'p_func','eva_lex.py',349),
  ('functipo -> type','functipo',1,'p_functipo','eva_lex.py',352),
  ('functipo -> VOID','functipo',1,'p_functipo','eva_lex.py',353),
  ('funcargs -> args','funcargs',1,'p_funcargs','eva_lex.py',356),
  ('funcargs -> empty','funcargs',1,'p_funcargs','eva_lex.py',357),
  ('funcest -> estatuto funcest','funcest',2,'p_funcEst','eva_lex.py',360),
  ('funcest -> empty','funcest',1,'p_funcEst','eva_lex.py',361),
  ('funcvars -> vars funcvars','funcvars',2,'p_funcvars','eva_lex.py',364),
  ('funcvars -> empty','funcvars',1,'p_funcvars','eva_lex.py',365),
  ('ciclo -> FOR LPAREN ciclo1 SEMICOLON exlog SEMICOLON asignacion RPAREN bloque','ciclo',9,'p_ciclo','eva_lex.py',368),
  ('ciclo1 -> asignacion','ciclo1',1,'p_ciclo1','eva_lex.py',371),
  ('ciclo1 -> empty','ciclo1',1,'p_ciclo1','eva_lex.py',372),
  ('empty -> <empty>','empty',0,'p_empty','eva_lex.py',375),
]
